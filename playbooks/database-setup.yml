---
- name: Deploy and configure database servers
  hosts: databases
  become: true
  vars_files:
    - ../group_vars/all.yml
    - ../group_vars/databases.yml

  pre_tasks:
    - name: Include base provisioning
      include_role:
        name: common
      tags: [base]

  roles:
    - role: postgresql
      tags: [database, postgresql]

  tasks:
    - name: Create database backup directory
      file:
        path: "{{ postgresql_backup_dir }}"
        state: directory
        owner: "{{ db_user }}"
        group: "{{ db_group }}"
        mode: '0755'
      when: postgresql_backup_enabled | default(false)
      tags: [database, backup]

    - name: Configure PostgreSQL
      template:
        src: postgresql.conf.j2
        dest: "{{ db_config_dir }}/postgresql.conf"
        owner: "{{ db_user }}"
        group: "{{ db_group }}"
        mode: '0644'
      notify: restart postgresql
      tags: [database, postgresql, config]

    - name: Create application database
      postgresql_db:
        name: "{{ item.name }}"
        encoding: "{{ item.encoding | default('UTF-8') }}"
        lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
        lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
      loop: "{{ postgresql_databases }}"
      tags: [database, postgresql]

    - name: Create database users
      postgresql_user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        databases: "{{ item.databases | default(omit) }}"
        priv: "{{ item.priv | default(omit) }}"
        state: present
      loop: "{{ postgresql_users }}"
      tags: [database, postgresql, users]

    - name: Ensure PostgreSQL is running and enabled
      service:
        name: postgresql
        state: started
        enabled: yes
      tags: [database, postgresql, service]

  handlers:
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted